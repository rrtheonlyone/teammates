name: Continous Integration Tests

on: 
  push:
    branches:
      - travis-ci 

jobs:
  lint:
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Cache NPM packages 
        uses: actions/cache@v2 
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Backend Dependancies 
        run: ./gradlew downloadDependencies downloadTestDependencies downloadLinters
      - name: Run Backend Linting 
        run: ./gradlew lint --continue 
      - name: Install FrontEnd Dependancies
        run: npm ci 
      - name: Run Lint Checks 
        run: npm run lint 
  component-testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Cache NPM packages 
        uses: actions/cache@v2 
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Backend Dependancies 
        run: ./gradlew downloadDependencies downloadTestDependencies downloadLinters
        shell: bash
      - name: Run Backend Tests    
        run: ./gradlew createConfigs componentTests 
        shell: bash 
      - name: Check Backend Coverage 
        run: ./gradlew jacocoReport
        shell: bash 
      - name: Generate Types 
        run: ./gradlew generateTypes
        shell: bash 
      - name: Install Frontend Dependancies 
        run: npm ci 
        shell: bash 
      - name: Run Frontend Tests and check Coverage 
        run: npm run coverage 
        shell: bash
      - name: Upload to Codecov 
        run: bash <(curl -s https://codecov.io/bash)
        shell: bash 
  E2E-testing:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false #ensure both tests run even if one fails
      matrix:
        browser: [chrome, firefox]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Cache NPM packages 
        uses: actions/cache@v2 
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Backend Dependancies 
        run: ./gradlew downloadDependencies downloadTestDependencies downloadLinters
      - name: Find out where is chromedriver
        run: whereis chromedriver 
      - name: Update Property File 
        run: mv $GITHUB_WORKSPACE/src/e2e/resources/test.ci-$E2E_BROWSER.properties src/e2e/resources/test.properties
        env:
          E2E_BROWSER: ${{ matrix.browser }}
      - name: Create Config Files 
        run: ./gradlew createConfigs testClasses generateTypes 
      - name: Install Frontend Dependancies
        run: npm ci 
      - name: Build Frontend Bundle 
        run: npm run build -- --progress=false --serviceWorker=false 
      - name: Start App Engine 
        run: ./gradlew appengineStart 
      - name: Start Tests 
        run: ./gradlew e2eTests 
